import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
data=pd.read_csv(r'C:\Users\user\Downloads\23rd\23rd\RESUME PROJECT -- PRICE PREDICTION\avocado.csv')

data.info()

data.head()

data.isnull().sum()

data = data.drop(['Unnamed: 0','4046','4225','4770','Date'],axis=1)
data

data.head()

def get_avarage(data,column):
    return sum(data[column])/len(data)

def get_avarge_between_two_columns(data,column1,column2):
    List=list(data[column1].unique())
    average=[]
    
    for i in List:
        x=data[data[column1]==i]
        column1_average= get_avarage(x,column2)
        average.append(column1_average)
        
    data_column1_column2=pd.DataFrame({'column1':List,'column2':average})
    column1_column2_sorted_index=data_column1_column2.column2.sort_values(ascending=False).index.values
    column1_column2_sorted_data=data_column1_column2.reindex(column1_column2_sorted_index)
    
    return column1_column2_sorted_data

def plot(data,xlabel,ylabel):
    
        
    plt.figure(figsize=(15,5))
    ax=sns.barplot(x=data.column1,y=data.column2,palette='rocket')
    plt.xticks(rotation=90)
    plt.xlabel(xlabel)
    plt.ylabel(ylabel)
    plt.title(('Avarage '+ylabel+' of Avocado According to '+xlabel));
    
    
import seaborn as sns
data1 = get_avarge_between_two_columns(data,'region','AveragePrice')
plot(data1,'Region','Price ($)')


print(data1['column1'].iloc[-1], " is the region producing avocado with the lowest price.")


data2 = get_avarge_between_two_columns(data,'region','Total Volume')
sns.boxplot(x=data2.column2).set_title("Figure: Boxplot repersenting outlier columns.")



outlier_region = data2[data2.column2>10000000]
print(outlier_region['column1'].iloc[-1], "is outlier value")


outlier_region.index
data2 = data2.drop(outlier_region.index,axis=0)


data2


plot(data2,'Region','Volume')


data3 = get_avarge_between_two_columns(data,'year','AveragePrice')
plot(data3,'year','Price')


data4 = get_avarge_between_two_columns(data,'year','Total Volume')
plot(data4,'year','Volume')


data['region'] = data['region'].astype('category')
data['region'] = data['region'].cat.codes

data['type'] = data['type'].astype('category')
data['type'] = data['type'].cat.codes

data.info()


data.head()
 

X = data.drop(['AveragePrice'],axis=1)
y = data['AveragePrice']

# split data into traing and testing dataset

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.3,random_state=15)


print("training set:",X_train.shape,' - ',y_train.shape[0],' samples')
print("testing set:",X_test.shape,' - ',y_test.shape[0],' samples')

from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(X_train,y_train)


from sklearn.metrics import r2_score
test_pre = model.predict(X_test)
test_score = r2_score(y_test,test_pre)
print("The accuracy of testing dataset ",test_score*100)


train_pre = model.predict(X_train)
train_score = r2_score(y_train,train_pre)
print("The accuracy of training dataset ",train_score*100)


